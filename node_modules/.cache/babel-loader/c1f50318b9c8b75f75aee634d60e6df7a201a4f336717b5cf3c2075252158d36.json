{"ast":null,"code":"var _jsxFileName = \"/Users/tamnguyen/EasyCuk/EasyCuk/src/components/Container/Container.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faPlusSquare, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { TodoItem } from \"./TodoItem\";\nimport { ThemeContext } from \"../../App\";\nimport classNames from \"classnames/bind\";\nimport styles from \"./Container.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\nfunction Container() {\n  _s();\n  const [theme, setTheme] = useContext(ThemeContext);\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  const inputRef = useRef();\n  const handleChange = e => setTodo(e.target.value);\n  const handleToggleTheme = () => {\n    setTheme(theme => {\n      switch (theme) {\n        case 'light':\n          return 'dark';\n        case 'dark':\n          return 'light';\n        default:\n          return new Error('Undefined theme');\n      }\n    });\n  };\n\n  // GET\n  useEffect(() => {\n    fetch('http://localhost:3000/todos').then(res => res.json()).then(data => setTodoList(data));\n  }, []);\n\n  // POST\n  const handleCreate = () => {\n    if (todo.trim() === '') return;\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        content: inputRef.current.value\n      })\n    };\n    fetch('http://localhost:3000/todos', options).then(res => res.json()).then(data => {\n      setTodoList(prev => [...prev, data]);\n      setTodo('');\n      inputRef.current.focus();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('header'),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: cx('title'),\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cx('toggle-theme'),\n        onClick: handleToggleTheme,\n        children: [theme === 'light' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: cx('theme-icon', 'light'),\n          icon: faMoon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), !(theme === 'light') && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: cx('theme-icon', 'dark'),\n          icon: faSun\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('create', theme),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        className: cx('input'),\n        value: todo,\n        onChange: handleChange,\n        placeholder: \"Create a new todo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cx('create-btn', theme),\n        onClick: handleCreate,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlusSquare\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx('result'),\n      children: [todoList.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cx('empty-result', theme),\n        children: \"Nothing to do...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: cx('todo-list'),\n        children: todoList.map(({\n          id,\n          content\n        }) => {\n          return /*#__PURE__*/_jsxDEV(TodoItem, {\n            id: id,\n            content: content,\n            todoList: todoList,\n            setTodoList: setTodoList\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Container, \"zLOOAepUV9pbcfAsGxcWYi+0xLI=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","useRef","useEffect","useContext","FontAwesomeIcon","faMoon","faPlusSquare","faSun","TodoItem","ThemeContext","classNames","styles","jsxDEV","_jsxDEV","cx","bind","Container","_s","theme","setTheme","todo","setTodo","todoList","setTodoList","inputRef","handleChange","e","target","value","handleToggleTheme","Error","fetch","then","res","json","data","handleCreate","trim","options","method","headers","body","JSON","stringify","content","current","prev","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","ref","onChange","placeholder","length","map","id","_c","$RefreshReg$"],"sources":["/Users/tamnguyen/EasyCuk/EasyCuk/src/components/Container/Container.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faPlusSquare, faSun } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { TodoItem } from \"./TodoItem\";\nimport { ThemeContext } from \"~/App\";\n\nimport classNames from \"classnames/bind\";\nimport styles from './Container.module.scss';\n\nconst cx = classNames.bind(styles);\n\nfunction Container() {\n    const [theme, setTheme] = useContext(ThemeContext)\n\n    const [todo, setTodo] = useState('');\n\n    const [todoList, setTodoList] = useState([])\n\n    const inputRef = useRef()\n\n    const handleChange = e => setTodo(e.target.value);\n\n    const handleToggleTheme = () => {\n        setTheme(theme => {\n            switch (theme) {\n                case 'light':\n                    return 'dark'\n                case 'dark':\n                    return 'light'\n                default:\n                    return new Error('Undefined theme')\n            }\n        })\n    }\n\n    // GET\n    useEffect(() => {\n        fetch('http://localhost:3000/todos')\n            .then(res => res.json())\n            .then(data => setTodoList(data))\n    }, [])\n\n    // POST\n    const handleCreate = () => {\n        if (todo.trim() === '')\n            return\n\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ content: inputRef.current.value })\n        };\n\n        fetch('http://localhost:3000/todos', options)\n            .then(res => res.json())\n            .then(data => {\n                setTodoList(prev => [...prev, data])\n                setTodo('');\n                inputRef.current.focus();\n            })\n    }\n\n    return (\n        <div className={cx('wrapper')}>\n            <div className={cx('header')}>\n                <h1 className={cx('title')}>TODO</h1>\n                <button\n                    className={cx('toggle-theme')}\n                    onClick={handleToggleTheme}\n                >\n                    {(theme === 'light') &&\n                        <FontAwesomeIcon className={cx('theme-icon', 'light')} icon={faMoon} />\n                    }\n                    {!(theme === 'light') &&\n                        <FontAwesomeIcon className={cx('theme-icon', 'dark')} icon={faSun} />\n                    }\n                </button>\n            </div>\n            <div className={cx('create', theme)}>\n                <input\n                    ref={inputRef}\n                    className={cx('input')}\n                    value={todo}\n                    onChange={handleChange}\n                    placeholder='Create a new todo...'\n                />\n                <button\n                    className={cx('create-btn', theme)}\n                    onClick={handleCreate}\n                >\n                    <FontAwesomeIcon icon={faPlusSquare} />\n                </button>\n            </div>\n            <div className={cx('result')}>\n                {todoList.length === 0 && <span className={cx('empty-result', theme)}>Nothing to do...</span>}\n                <ul className={cx('todo-list')}>\n                    {todoList.map((({ id, content }) => {\n                        return (\n                            <TodoItem\n                                key={id}\n                                id={id}\n                                content={content}\n                                todoList={todoList}\n                                setTodoList={setTodoList}\n                            />\n                        )\n                    }))}\n                </ul>\n            </div >\n\n        </div >\n    );\n}\n\nexport default Container;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}