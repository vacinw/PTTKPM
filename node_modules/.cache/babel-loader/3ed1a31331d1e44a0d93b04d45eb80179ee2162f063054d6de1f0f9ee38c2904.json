{"ast":null,"code":"import { createSelector } from \"reselect\";\nexport const foodsSelector = state => state.foods;\nexport const searchNameSelector = state => state.filters.name;\nexport const searchDietSelector = state => state.filters.diet;\nexport const searchIngredientsSelector = state => state.filters.ingredients;\nexport const foodsRemainingSelector = createSelector(foodsSelector, searchNameSelector, searchDietSelector, searchIngredientsSelector, (foods, name, diet, ingredients) => {\n  const filterByName = foods.filter(food => food.name.toLowerCase().includes(name));\n  const filterByDiet = !diet || diet === \"Tất cả chế độ ăn\" ? [...filterByName] : filterByName.filter(food => food.diet === diet);\n  const filterByIngredients = ingredients.length === 0 ? [...filterByDiet] : filterByDiet.filter(food => {\n    const _ingredients = food.ingredients.map(ingredient => ingredient.name.toLowerCase());\n    const newIngredients = ingredients.map(ingredient => ingredient.toLowerCase());\n    const hasIngredients = _ingredients.some(ingredient => newIngredients.includes(ingredient));\n    return hasIngredients;\n  });\n  return filterByIngredients;\n});\n\n// const ingredientsToFilter = ['kem', 'bơ'];\n\n// const filteredArray = initState.filter((item) => {\n//   const ingredients = item.ingredients.map((ingredient) =>\n//     ingredient.name.toLowerCase()\n//   );\n\n//   const hasIngredients = ingredients.some((ingredient) =>\n//     ingredientsToFilter.includes(ingredient.toLowerCase())\n//   );\n\n//   return hasIngredients;\n// });","map":{"version":3,"names":["createSelector","foodsSelector","state","foods","searchNameSelector","filters","name","searchDietSelector","diet","searchIngredientsSelector","ingredients","foodsRemainingSelector","filterByName","filter","food","toLowerCase","includes","filterByDiet","filterByIngredients","length","_ingredients","map","ingredient","newIngredients","hasIngredients","some"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/redux/selectors.js"],"sourcesContent":["import { createSelector } from \"reselect\";\n\nexport const foodsSelector = (state) => state.foods;\n\nexport const searchNameSelector = (state) => state.filters.name;\nexport const searchDietSelector = (state) => state.filters.diet;\nexport const searchIngredientsSelector = (state) => state.filters.ingredients;\n\nexport const foodsRemainingSelector = createSelector(\n  foodsSelector,\n  searchNameSelector,\n  searchDietSelector,\n  searchIngredientsSelector,\n  (foods, name, diet, ingredients) => {\n    const filterByName = foods.filter((food) =>\n      food.name.toLowerCase().includes(name)\n    );\n    const filterByDiet =\n      !diet || diet === \"Tất cả chế độ ăn\"\n        ? [...filterByName]\n        : filterByName.filter((food) => food.diet === diet);\n    const filterByIngredients =\n      ingredients.length === 0\n        ? [...filterByDiet]\n        : filterByDiet.filter((food) => {\n            const _ingredients = food.ingredients.map((ingredient) =>\n              ingredient.name.toLowerCase()\n            );\n            const newIngredients = ingredients.map((ingredient) =>\n              ingredient.toLowerCase()\n            );\n            const hasIngredients = _ingredients.some((ingredient) =>\n              newIngredients.includes(ingredient)\n            );\n            return hasIngredients;\n          });\n    return filterByIngredients;\n  }\n);\n\n// const ingredientsToFilter = ['kem', 'bơ'];\n\n// const filteredArray = initState.filter((item) => {\n//   const ingredients = item.ingredients.map((ingredient) =>\n//     ingredient.name.toLowerCase()\n//   );\n\n//   const hasIngredients = ingredients.some((ingredient) =>\n//     ingredientsToFilter.includes(ingredient.toLowerCase())\n//   );\n\n//   return hasIngredients;\n// });\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AAEzC,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAKA,KAAK,CAACC,KAAK;AAEnD,OAAO,MAAMC,kBAAkB,GAAIF,KAAK,IAAKA,KAAK,CAACG,OAAO,CAACC,IAAI;AAC/D,OAAO,MAAMC,kBAAkB,GAAIL,KAAK,IAAKA,KAAK,CAACG,OAAO,CAACG,IAAI;AAC/D,OAAO,MAAMC,yBAAyB,GAAIP,KAAK,IAAKA,KAAK,CAACG,OAAO,CAACK,WAAW;AAE7E,OAAO,MAAMC,sBAAsB,GAAGX,cAAc,CAClDC,aAAa,EACbG,kBAAkB,EAClBG,kBAAkB,EAClBE,yBAAyB,EACzB,CAACN,KAAK,EAAEG,IAAI,EAAEE,IAAI,EAAEE,WAAW,KAAK;EAClC,MAAME,YAAY,GAAGT,KAAK,CAACU,MAAM,CAAEC,IAAI,IACrCA,IAAI,CAACR,IAAI,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,IAAI,CACvC,CAAC;EACD,MAAMW,YAAY,GAChB,CAACT,IAAI,IAAIA,IAAI,KAAK,kBAAkB,GAChC,CAAC,GAAGI,YAAY,CAAC,GACjBA,YAAY,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,IAAI,KAAKA,IAAI,CAAC;EACvD,MAAMU,mBAAmB,GACvBR,WAAW,CAACS,MAAM,KAAK,CAAC,GACpB,CAAC,GAAGF,YAAY,CAAC,GACjBA,YAAY,CAACJ,MAAM,CAAEC,IAAI,IAAK;IAC5B,MAAMM,YAAY,GAAGN,IAAI,CAACJ,WAAW,CAACW,GAAG,CAAEC,UAAU,IACnDA,UAAU,CAAChB,IAAI,CAACS,WAAW,CAAC,CAC9B,CAAC;IACD,MAAMQ,cAAc,GAAGb,WAAW,CAACW,GAAG,CAAEC,UAAU,IAChDA,UAAU,CAACP,WAAW,CAAC,CACzB,CAAC;IACD,MAAMS,cAAc,GAAGJ,YAAY,CAACK,IAAI,CAAEH,UAAU,IAClDC,cAAc,CAACP,QAAQ,CAACM,UAAU,CACpC,CAAC;IACD,OAAOE,cAAc;EACvB,CAAC,CAAC;EACR,OAAON,mBAAmB;AAC5B,CACF,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}