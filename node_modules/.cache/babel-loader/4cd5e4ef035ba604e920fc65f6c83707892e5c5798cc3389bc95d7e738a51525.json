{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    data: []\n  },\n  reducers: {\n    fetchUsers: (state, action) => {\n      state.users = action.payload;\n    },\n    addUserChange: (state, action) => {\n      state.push(action.payload);\n    },\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.data.find(user => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(user => user.id === action.payload.userId);\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(foodId => foodId !== action.payload.foodId);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.data = action.payload;\n    }).addCase(addUser.fulfilled, (state, action) => {\n      state.data.push(action.payload);\n    }).addCase(updatePassword.fulfilled, (state, action) => {\n      const currentUser = state.data.find(user => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    });\n  }\n});\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"http://localhost:3000/users\");\n  const data = await res.json();\n  return data;\n});\nexport const addUser = createAsyncThunk(\"users/addUser\", async newUser => {\n  const res = await fetch(\"http://localhost:3000/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify(newUser)\n  });\n  const data = await res.json();\n  return data;\n});\nexport const updatePassword = createAsyncThunk(\"users/updatePassword\", async ({\n  id,\n  newPassword\n}) => {\n  const res = await fetch(\"http://localhost:3000/users/\" + id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify({\n      newPassword\n    })\n  });\n  const data = await res.json();\n  return data;\n});","map":{"version":3,"names":["v4","uuidv4","createSlice","createAsyncThunk","name","initialState","status","data","reducers","fetchUsers","state","action","users","payload","addUserChange","push","updatePasswordChange","currentUser","find","user","id","password","newPassword","toggleUserLikeChange","userId","liked","includes","foodId","filter","extraReducers","builder","addCase","pending","fulfilled","addUser","updatePassword","res","fetch","json","newUser","method","headers","body","JSON","stringify"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/components/pages/forms/usersSlice.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    data: [],\n  },\n  reducers: {\n    fetchUsers: (state, action) => {\n      state.users = action.payload;\n    },\n    addUserChange: (state, action) => {\n      state.push(action.payload);\n    },\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.data.find(\n        (user) => user.id === action.payload.id\n      );\n      currentUser.password = action.payload.newPassword;\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(\n        (user) => user.id === action.payload.userId\n      );\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(\n            (foodId) => foodId !== action.payload.foodId\n          );\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUsers.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.data = action.payload;\n      })\n      .addCase(addUser.fulfilled, (state, action) => {\n        state.data.push(action.payload);\n      })\n      .addCase(updatePassword.fulfilled, (state, action) => {\n        const currentUser = state.data.find(\n          (user) => user.id === action.payload.id\n        );\n        currentUser.password = action.payload.newPassword;\n      });\n  },\n});\n\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"http://localhost:3000/users\");\n  const data = await res.json();\n  return data;\n});\n\nexport const addUser = createAsyncThunk(\"users/addUser\", async (newUser) => {\n  const res = await fetch(\"http://localhost:3000/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n    },\n    body: JSON.stringify(newUser),\n  });\n  const data = await res.json();\n  return data;\n});\n\nexport const updatePassword = createAsyncThunk(\n  \"users/updatePassword\",\n  async ({ id, newPassword }) => {\n    const res = await fetch(\"http://localhost:3000/users/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({ newPassword }),\n    });\n    const data = await res.json();\n    return data;\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}