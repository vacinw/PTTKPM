{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"foods\",\n  initialState: {\n    status: \"idle\",\n    data: []\n  },\n  reducers: {\n    toggleFoodLikeChange: (state, action) => {\n      const currentFood = state.find(food => food.id === action.payload.foodId);\n      if (currentFood) {\n        if (!currentFood.userLiked.includes(action.payload.userId)) {\n          currentFood.userLiked.push(action.payload.userId);\n        } else {\n          currentFood.userLiked = currentFood.userLiked.filter(userId => userId !== action.payload.userId);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchFoods.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  }\n});\nexport const fetchFoods = createAsyncThunk(\"foods/fetchFoods\", async () => {\n  const res = await fetch(\"http://localhost:3000/foods\");\n  const data = await res.json();\n  return data;\n});\nexport const toggleFoodLike = createAsyncThunk(\"foods/toggleFoodLike\", async ([food, userId]) => {\n  const res = await fetch(\"http://localhost:3000/foods/\" + food.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    },\n    body: JSON.stringify(food)\n  });\n  const data = await res.json();\n  console.log(\"updated password\", data);\n  return data;\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","name","initialState","status","data","reducers","toggleFoodLikeChange","state","action","currentFood","find","food","id","payload","foodId","userLiked","includes","userId","push","filter","extraReducers","builder","addCase","fetchFoods","fulfilled","res","fetch","json","toggleFoodLike","method","headers","body","JSON","stringify","console","log"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/components/Main/foodsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"foods\",\n  initialState: {\n    status: \"idle\",\n    data: [],\n  },\n  reducers: {\n    toggleFoodLikeChange: (state, action) => {\n      const currentFood = state.find(\n        (food) => food.id === action.payload.foodId\n      );\n      if (currentFood) {\n        if (!currentFood.userLiked.includes(action.payload.userId)) {\n          currentFood.userLiked.push(action.payload.userId);\n        } else {\n          currentFood.userLiked = currentFood.userLiked.filter(\n            (userId) => userId !== action.payload.userId\n          );\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchFoods.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport const fetchFoods = createAsyncThunk(\"foods/fetchFoods\", async () => {\n  const res = await fetch(\"http://localhost:3000/foods\");\n  const data = await res.json();\n  return data;\n});\n\nexport const toggleFoodLike = createAsyncThunk(\n  \"foods/toggleFoodLike\",\n  async ([food, userId]) => {\n    const res = await fetch(\"http://localhost:3000/foods/\" + food.id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify(food),\n    });\n    const data = await res.json();\n    console.log(\"updated password\", data);\n    return data;\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,eAAeA,WAAW,CAAC;EACzBC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,oBAAoB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMC,WAAW,GAAGF,KAAK,CAACG,IAAI,CAC3BC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACC,MACvC,CAAC;MACD,IAAIL,WAAW,EAAE;QACf,IAAI,CAACA,WAAW,CAACM,SAAS,CAACC,QAAQ,CAACR,MAAM,CAACK,OAAO,CAACI,MAAM,CAAC,EAAE;UAC1DR,WAAW,CAACM,SAAS,CAACG,IAAI,CAACV,MAAM,CAACK,OAAO,CAACI,MAAM,CAAC;QACnD,CAAC,MAAM;UACLR,WAAW,CAACM,SAAS,GAAGN,WAAW,CAACM,SAAS,CAACI,MAAM,CACjDF,MAAM,IAAKA,MAAM,KAAKT,MAAM,CAACK,OAAO,CAACI,MACxC,CAAC;QACH;MACF;IACF;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,UAAU,CAACC,SAAS,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACH,IAAI,GAAGI,MAAM,CAACK,OAAO;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMU,UAAU,GAAGxB,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAM0B,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EACtD,MAAMtB,IAAI,GAAG,MAAMqB,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,OAAOvB,IAAI;AACb,CAAC,CAAC;AAEF,OAAO,MAAMwB,cAAc,GAAG7B,gBAAgB,CAC5C,sBAAsB,EACtB,OAAO,CAACY,IAAI,EAAEM,MAAM,CAAC,KAAK;EACxB,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGf,IAAI,CAACC,EAAE,EAAE;IAChEiB,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,IAAI;EAC3B,CAAC,CAAC;EACF,MAAMP,IAAI,GAAG,MAAMqB,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7BO,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE/B,IAAI,CAAC;EACrC,OAAOA,IAAI;AACb,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}