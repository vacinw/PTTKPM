{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    data: []\n  },\n  reducers: {\n    fetchUsers: (state, action) => {\n      state.users = action.payload;\n    },\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.find(user => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    },\n    addUserChange: (state, action) => {\n      state.push({\n        username: action.payload.username,\n        password: action.payload.password,\n        diet: \"null\",\n        liked: [],\n        id: uuidv4()\n      });\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(user => user.id === action.payload.userId);\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(foodId => foodId !== action.payload.foodId);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.data = action.payload;\n    });\n  }\n});\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"http://localhost:3000/users\");\n  const data = await res.json();\n  return data;\n});","map":{"version":3,"names":["v4","uuidv4","createSlice","createAsyncThunk","name","initialState","status","data","reducers","fetchUsers","state","action","users","payload","updatePasswordChange","currentUser","find","user","id","password","newPassword","addUserChange","push","username","diet","liked","toggleUserLikeChange","userId","includes","foodId","filter","extraReducers","builder","addCase","pending","fulfilled","res","fetch","json"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/components/pages/forms/usersSlice.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    data: [],\n  },\n  reducers: {\n    fetchUsers: (state, action) => {\n      state.users = action.payload;\n    },\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.find((user) => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    },\n    addUserChange: (state, action) => {\n      state.push({\n        username: action.payload.username,\n        password: action.payload.password,\n        diet: \"null\",\n        liked: [],\n        id: uuidv4(),\n      });\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(\n        (user) => user.id === action.payload.userId\n      );\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(\n            (foodId) => foodId !== action.payload.foodId\n          );\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUsers.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.data = action.payload;\n      });\n  },\n});\n\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"http://localhost:3000/users\");\n  const data = await res.json();\n  return data;\n});\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,eAAeD,WAAW,CAAC;EACzBE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACE,KAAK,GAAGD,MAAM,CAACE,OAAO;IAC9B,CAAC;IACDC,oBAAoB,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMI,WAAW,GAAGL,KAAK,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACK,EAAE,CAAC;MACvEH,WAAW,CAACI,QAAQ,GAAGR,MAAM,CAACE,OAAO,CAACO,WAAW;IACnD,CAAC;IACDC,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACY,IAAI,CAAC;QACTC,QAAQ,EAAEZ,MAAM,CAACE,OAAO,CAACU,QAAQ;QACjCJ,QAAQ,EAAER,MAAM,CAACE,OAAO,CAACM,QAAQ;QACjCK,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,EAAE;QACTP,EAAE,EAAEjB,MAAM,CAAC;MACb,CAAC,CAAC;IACJ,CAAC;IACDyB,oBAAoB,EAAEA,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMI,WAAW,GAAGL,KAAK,CAACM,IAAI,CAC3BC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAACc,MACvC,CAAC;MACD,IAAIZ,WAAW,EAAE;QACf,IAAI,CAACA,WAAW,CAACU,KAAK,CAACG,QAAQ,CAACjB,MAAM,CAACE,OAAO,CAACgB,MAAM,CAAC,EAAE;UACtDd,WAAW,CAACU,KAAK,CAACH,IAAI,CAACX,MAAM,CAACE,OAAO,CAACgB,MAAM,CAAC;QAC/C,CAAC,MAAM;UACLd,WAAW,CAACU,KAAK,GAAGV,WAAW,CAACU,KAAK,CAACK,MAAM,CACzCD,MAAM,IAAKA,MAAM,KAAKlB,MAAM,CAACE,OAAO,CAACgB,MACxC,CAAC;QACH;MACF;IACF;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,UAAU,CAACyB,OAAO,EAAE,CAACxB,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACD2B,OAAO,CAACxB,UAAU,CAAC0B,SAAS,EAAE,CAACzB,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACJ,MAAM,GAAG,MAAM;MACrBI,KAAK,CAACH,IAAI,GAAGI,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMJ,UAAU,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMiC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EACtD,MAAM9B,IAAI,GAAG,MAAM6B,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,OAAO/B,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}