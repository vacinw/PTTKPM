{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    users: []\n  },\n  reducers: {\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.find(user => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    },\n    addUserChange: (state, action) => {\n      state.push({\n        username: action.payload.username,\n        password: action.payload.password,\n        diet: \"null\",\n        liked: [],\n        id: uuidv4()\n      });\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(user => user.id === action.payload.userId);\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(foodId => foodId !== action.payload.foodId);\n        }\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.users = action.payload;\n    });\n  }\n});\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\n  const data = JSON.parse(res);\n  console.log(\"FETCH PHOTOS\", data);\n});\n\n// [\n//   {\n//     id: 1,\n//     username: \"anchay\",\n//     liked: [],\n//     password: \"avc\",\n//     diet: null,\n//   },\n//   {\n//     id: 2,\n//     username: \"toitenho\",\n//     diet: null,\n//     liked: [],\n//     password: \"123\",\n//   },\n//   {\n//     id: 3,\n//     username: \"ranhmanh\",\n//     liked: [],\n//     password: \"1234\",\n//     diet: null,\n//   },\n//   {\n//     username: \"toitenlatho\",\n//     liked: [],\n//     password: \"ddv\",\n//     diet: \"null\",\n//     id: 4,\n//   },\n//   {\n//     username: \"toikhongdu\",\n//     liked: [],\n//     password: \"ranhmanh\",\n//     diet: \"null\",\n//     id: 5,\n//   },\n//   {\n//     username: \"anman\",\n//     liked: [],\n//     password: \"012\",\n//     diet: \"null\",\n//     id: 6,\n//   },\n//   {\n//     username: \"ancutgi\",\n//     password: \"cuchinh\",\n//     liked: [],\n//     diet: \"null\",\n//     id: 7,\n//   },\n//   {\n//     username: \"djtcu\",\n//     password: \"111\",\n//     diet: \"null\",\n//     liked: [],\n//     id: 8,\n//   },\n//   {\n//     username: \"anho\",\n//     password: \"anho\",\n//     diet: \"null\",\n//     liked: [],\n//     id: 9,\n//   },\n// ]","map":{"version":3,"names":["v4","uuidv4","createSlice","createAsyncThunk","name","initialState","status","users","reducers","updatePasswordChange","state","action","currentUser","find","user","id","payload","password","newPassword","addUserChange","push","username","diet","liked","toggleUserLikeChange","userId","includes","foodId","filter","extraReducers","builder","addCase","fetchUsers","pending","fulfilled","res","fetch","data","JSON","parse","console","log"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/components/pages/forms/usersSlice.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"users\",\n  initialState: {\n    status: \"idle\",\n    users: [],\n  },\n  reducers: {\n    updatePasswordChange: (state, action) => {\n      const currentUser = state.find((user) => user.id === action.payload.id);\n      currentUser.password = action.payload.newPassword;\n    },\n    addUserChange: (state, action) => {\n      state.push({\n        username: action.payload.username,\n        password: action.payload.password,\n        diet: \"null\",\n        liked: [],\n        id: uuidv4(),\n      });\n    },\n    toggleUserLikeChange: (state, action) => {\n      const currentUser = state.find(\n        (user) => user.id === action.payload.userId\n      );\n      if (currentUser) {\n        if (!currentUser.liked.includes(action.payload.foodId)) {\n          currentUser.liked.push(action.payload.foodId);\n        } else {\n          currentUser.liked = currentUser.liked.filter(\n            (foodId) => foodId !== action.payload.foodId\n          );\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchUsers.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.status = \"idle\";\n        state.users = action.payload;\n      });\n  },\n});\n\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/photos\");\n  const data = JSON.parse(res);\n  console.log(\"FETCH PHOTOS\", data);\n});\n\n// [\n//   {\n//     id: 1,\n//     username: \"anchay\",\n//     liked: [],\n//     password: \"avc\",\n//     diet: null,\n//   },\n//   {\n//     id: 2,\n//     username: \"toitenho\",\n//     diet: null,\n//     liked: [],\n//     password: \"123\",\n//   },\n//   {\n//     id: 3,\n//     username: \"ranhmanh\",\n//     liked: [],\n//     password: \"1234\",\n//     diet: null,\n//   },\n//   {\n//     username: \"toitenlatho\",\n//     liked: [],\n//     password: \"ddv\",\n//     diet: \"null\",\n//     id: 4,\n//   },\n//   {\n//     username: \"toikhongdu\",\n//     liked: [],\n//     password: \"ranhmanh\",\n//     diet: \"null\",\n//     id: 5,\n//   },\n//   {\n//     username: \"anman\",\n//     liked: [],\n//     password: \"012\",\n//     diet: \"null\",\n//     id: 6,\n//   },\n//   {\n//     username: \"ancutgi\",\n//     password: \"cuchinh\",\n//     liked: [],\n//     diet: \"null\",\n//     id: 7,\n//   },\n//   {\n//     username: \"djtcu\",\n//     password: \"111\",\n//     diet: \"null\",\n//     liked: [],\n//     id: 8,\n//   },\n//   {\n//     username: \"anho\",\n//     password: \"anho\",\n//     diet: \"null\",\n//     liked: [],\n//     id: 9,\n//   },\n// ]\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,eAAeD,WAAW,CAAC;EACzBE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,oBAAoB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMC,WAAW,GAAGF,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MACvEH,WAAW,CAACK,QAAQ,GAAGN,MAAM,CAACK,OAAO,CAACE,WAAW;IACnD,CAAC;IACDC,aAAa,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACU,IAAI,CAAC;QACTC,QAAQ,EAAEV,MAAM,CAACK,OAAO,CAACK,QAAQ;QACjCJ,QAAQ,EAAEN,MAAM,CAACK,OAAO,CAACC,QAAQ;QACjCK,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,EAAE;QACTR,EAAE,EAAEd,MAAM,CAAC;MACb,CAAC,CAAC;IACJ,CAAC;IACDuB,oBAAoB,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACvC,MAAMC,WAAW,GAAGF,KAAK,CAACG,IAAI,CAC3BC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACS,MACvC,CAAC;MACD,IAAIb,WAAW,EAAE;QACf,IAAI,CAACA,WAAW,CAACW,KAAK,CAACG,QAAQ,CAACf,MAAM,CAACK,OAAO,CAACW,MAAM,CAAC,EAAE;UACtDf,WAAW,CAACW,KAAK,CAACH,IAAI,CAACT,MAAM,CAACK,OAAO,CAACW,MAAM,CAAC;QAC/C,CAAC,MAAM;UACLf,WAAW,CAACW,KAAK,GAAGX,WAAW,CAACW,KAAK,CAACK,MAAM,CACzCD,MAAM,IAAKA,MAAM,KAAKhB,MAAM,CAACK,OAAO,CAACW,MACxC,CAAC;QACH;MACF;IACF;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAE,CAACvB,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDyB,OAAO,CAACC,UAAU,CAACE,SAAS,EAAE,CAACxB,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACJ,MAAM,GAAG,MAAM;MACrBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACK,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAMgB,UAAU,GAAG7B,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMgC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;EACtE,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC;EAC5BK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,IAAI,CAAC;AACnC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}