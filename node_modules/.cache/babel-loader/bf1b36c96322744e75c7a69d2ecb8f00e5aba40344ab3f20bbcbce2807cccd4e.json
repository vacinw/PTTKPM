{"ast":null,"code":"// const initState = [\n//   {\n//     id: 1,\n//     name: \"Kem dừa mã lai\",\n//     recipe: [\"ăng\", \"nhăng\", \"nhăng\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"dừa\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [4, 2],\n//   },\n//   {\n//     id: 2,\n//     name: \"Kem tuyết dâu mã lai\",\n//     recipe: [\"ngon\", \"tuyệt\", \"zời\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"dâu\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n//   {\n//     id: 3,\n//     name: \"Kem bơ mã lai\",\n//     recipe: [\"an\", \"nhang\", \"nhang\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"bơ\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n//   {\n//     id: 4,\n//     name: \"Kem sữa chua hy lạp mã lai\",\n//     recipe: [\"an\", \"nhang\", \"nhang\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"sữa đặc\",\n//         quantity: 1,\n//         unit: \"lon\",\n//       },\n//       {\n//         name: \"sữa chua\",\n//         quantity: 2,\n//         unit: \"hộp\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n// ];\n\n// const foodsReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"foods/toggleFoodLikeChange\":\n//       return state.map((food) => {\n//         if (food.id !== action.payload.foodId) {\n//           return food;\n//         } else if (!food.userLiked.includes(action.payload.userId)) {\n//           return {\n//             ...food,\n//             userLiked: [...food.userLiked, action.payload.userId],\n//           };\n//         } else {\n//           return {\n//             ...food,\n//             userLiked: food.userLiked.filter(\n//               (userId) => userId !== action.payload.userId\n//             ),\n//           };\n//         }\n//       });\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default foodsReducer;\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport default createSlice({\n  name: \"foods\",\n  initialState: [{\n    id: 1,\n    name: \"Kem dừa mã lai\",\n    recipe: [\"ăng\", \"nhăng\", \"nhăng\"],\n    ingredients: [{\n      name: \"kem\",\n      quantity: 1,\n      unit: \"cân\"\n    }, {\n      name: \"dừa\",\n      quantity: 2,\n      unit: \"quả\"\n    }, {\n      name: \"mã lai\",\n      quantity: 3,\n      unit: \"gam\"\n    }],\n    userLiked: [4, 2]\n  }, {\n    id: 2,\n    name: \"Kem tuyết dâu mã lai\",\n    recipe: [\"ngon\", \"tuyệt\", \"zời\"],\n    ingredients: [{\n      name: \"kem\",\n      quantity: 1,\n      unit: \"cân\"\n    }, {\n      name: \"dâu\",\n      quantity: 2,\n      unit: \"quả\"\n    }, {\n      name: \"mã lai\",\n      quantity: 3,\n      unit: \"gam\"\n    }],\n    userLiked: []\n  }, {\n    id: 3,\n    name: \"Kem bơ mã lai\",\n    recipe: [\"an\", \"nhang\", \"nhang\"],\n    ingredients: [{\n      name: \"kem\",\n      quantity: 1,\n      unit: \"cân\"\n    }, {\n      name: \"bơ\",\n      quantity: 2,\n      unit: \"quả\"\n    }, {\n      name: \"mã lai\",\n      quantity: 3,\n      unit: \"gam\"\n    }],\n    userLiked: []\n  }, {\n    id: 4,\n    name: \"Kem sữa chua hy lạp mã lai\",\n    recipe: [\"an\", \"nhang\", \"nhang\"],\n    ingredients: [{\n      name: \"kem\",\n      quantity: 1,\n      unit: \"cân\"\n    }, {\n      name: \"sữa đặc\",\n      quantity: 1,\n      unit: \"lon\"\n    }, {\n      name: \"sữa chua\",\n      quantity: 2,\n      unit: \"hộp\"\n    }, {\n      name: \"mã lai\",\n      quantity: 3,\n      unit: \"gam\"\n    }, {\n      name: \"mã lai\",\n      quantity: 3,\n      unit: \"gam\"\n    }],\n    userLiked: []\n  }],\n  reducers: {\n    toggleFoodLikeChange: (state, action) => {\n      const currentFood = state.find(food => food.id === action.payload.foodId);\n      if (currentFood) {\n        if (currentFood.userLiked.includes(action.payload.userId)) {\n          currentFood.userLiked.push(action.payload.userId);\n        } else {\n          currentFood.userLiked = currentFood.userLiked.filter(userId => userId !== action.payload.userId);\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["createSlice","name","initialState","id","recipe","ingredients","quantity","unit","userLiked","reducers","toggleFoodLikeChange","state","action","currentFood","find","food","payload","foodId","includes","userId","push","filter"],"sources":["/Users/Tamhayhoc/react-webpack/EasyCuk/src/components/Main/foodsSlice.js"],"sourcesContent":["// const initState = [\n//   {\n//     id: 1,\n//     name: \"Kem dừa mã lai\",\n//     recipe: [\"ăng\", \"nhăng\", \"nhăng\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"dừa\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [4, 2],\n//   },\n//   {\n//     id: 2,\n//     name: \"Kem tuyết dâu mã lai\",\n//     recipe: [\"ngon\", \"tuyệt\", \"zời\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"dâu\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n//   {\n//     id: 3,\n//     name: \"Kem bơ mã lai\",\n//     recipe: [\"an\", \"nhang\", \"nhang\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"bơ\",\n//         quantity: 2,\n//         unit: \"quả\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n//   {\n//     id: 4,\n//     name: \"Kem sữa chua hy lạp mã lai\",\n//     recipe: [\"an\", \"nhang\", \"nhang\"],\n//     ingredients: [\n//       {\n//         name: \"kem\",\n//         quantity: 1,\n//         unit: \"cân\",\n//       },\n//       {\n//         name: \"sữa đặc\",\n//         quantity: 1,\n//         unit: \"lon\",\n//       },\n//       {\n//         name: \"sữa chua\",\n//         quantity: 2,\n//         unit: \"hộp\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//       {\n//         name: \"mã lai\",\n//         quantity: 3,\n//         unit: \"gam\",\n//       },\n//     ],\n//     userLiked: [],\n//   },\n// ];\n\n// const foodsReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"foods/toggleFoodLikeChange\":\n//       return state.map((food) => {\n//         if (food.id !== action.payload.foodId) {\n//           return food;\n//         } else if (!food.userLiked.includes(action.payload.userId)) {\n//           return {\n//             ...food,\n//             userLiked: [...food.userLiked, action.payload.userId],\n//           };\n//         } else {\n//           return {\n//             ...food,\n//             userLiked: food.userLiked.filter(\n//               (userId) => userId !== action.payload.userId\n//             ),\n//           };\n//         }\n//       });\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default foodsReducer;\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport default createSlice({\n  name: \"foods\",\n  initialState: [\n    {\n      id: 1,\n      name: \"Kem dừa mã lai\",\n      recipe: [\"ăng\", \"nhăng\", \"nhăng\"],\n      ingredients: [\n        {\n          name: \"kem\",\n          quantity: 1,\n          unit: \"cân\",\n        },\n        {\n          name: \"dừa\",\n          quantity: 2,\n          unit: \"quả\",\n        },\n        {\n          name: \"mã lai\",\n          quantity: 3,\n          unit: \"gam\",\n        },\n      ],\n      userLiked: [4, 2],\n    },\n    {\n      id: 2,\n      name: \"Kem tuyết dâu mã lai\",\n      recipe: [\"ngon\", \"tuyệt\", \"zời\"],\n      ingredients: [\n        {\n          name: \"kem\",\n          quantity: 1,\n          unit: \"cân\",\n        },\n        {\n          name: \"dâu\",\n          quantity: 2,\n          unit: \"quả\",\n        },\n        {\n          name: \"mã lai\",\n          quantity: 3,\n          unit: \"gam\",\n        },\n      ],\n      userLiked: [],\n    },\n    {\n      id: 3,\n      name: \"Kem bơ mã lai\",\n      recipe: [\"an\", \"nhang\", \"nhang\"],\n      ingredients: [\n        {\n          name: \"kem\",\n          quantity: 1,\n          unit: \"cân\",\n        },\n        {\n          name: \"bơ\",\n          quantity: 2,\n          unit: \"quả\",\n        },\n        {\n          name: \"mã lai\",\n          quantity: 3,\n          unit: \"gam\",\n        },\n      ],\n      userLiked: [],\n    },\n    {\n      id: 4,\n      name: \"Kem sữa chua hy lạp mã lai\",\n      recipe: [\"an\", \"nhang\", \"nhang\"],\n      ingredients: [\n        {\n          name: \"kem\",\n          quantity: 1,\n          unit: \"cân\",\n        },\n        {\n          name: \"sữa đặc\",\n          quantity: 1,\n          unit: \"lon\",\n        },\n        {\n          name: \"sữa chua\",\n          quantity: 2,\n          unit: \"hộp\",\n        },\n        {\n          name: \"mã lai\",\n          quantity: 3,\n          unit: \"gam\",\n        },\n        {\n          name: \"mã lai\",\n          quantity: 3,\n          unit: \"gam\",\n        },\n      ],\n      userLiked: [],\n    },\n  ],\n  reducers: {\n    toggleFoodLikeChange: (state, action) => {\n      const currentFood = state.find(\n        (food) => food.id === action.payload.foodId\n      );\n      if (currentFood) {\n        if (currentFood.userLiked.includes(action.payload.userId)) {\n          currentFood.userLiked.push(action.payload.userId);\n        } else {\n          currentFood.userLiked = currentFood.userLiked.filter(\n            (userId) => userId !== action.payload.userId\n          );\n        }\n      }\n    },\n  },\n});\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}